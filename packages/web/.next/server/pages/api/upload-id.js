"use strict";(()=>{var e={};e.id=24,e.ids=[24],e.modules={145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6705:e=>{e.exports=import("formidable")},6555:e=>{e.exports=import("uuid")},7147:e=>{e.exports=require("fs")},1017:e=>{e.exports=require("path")},1241:(e,i,a)=>{a.a(e,async(e,r)=>{try{a.r(i),a.d(i,{config:()=>u,default:()=>p,routeModule:()=>c});var t=a(9150),s=a(1631),o=a(6835),n=a(7062),l=e([n]);n=(l.then?(await l)():l)[0];let p=(0,o.l)(n,"default"),u=(0,o.l)(n,"config"),c=new t.PagesAPIRouteModule({definition:{kind:s.x.PAGES_API,page:"/api/upload-id",pathname:"/api/upload-id",bundlePath:"",filename:""},userland:n});r()}catch(e){r(e)}})},7062:(e,i,a)=>{a.a(e,async(e,r)=>{try{a.r(i),a.d(i,{config:()=>u,default:()=>handler});var t=a(6705),s=a(7147),o=a(1017),n=a.n(o),l=a(6555),p=e([t,l]);[t,l]=p.then?(await p)():p;let u={api:{bodyParser:!1}},c=n().join(process.cwd(),"uploads"),d=["image/jpeg","image/jpg","image/png","application/pdf"];async function ensureUploadDir(){try{await s.promises.access(c)}catch{await s.promises.mkdir(c,{recursive:!0})}}function validateFile(e){return e.size>10485760?"File size exceeds maximum limit of 10MB":e.mimetype&&d.includes(e.mimetype)?null:"Invalid file type. Please upload JPG, PNG, or PDF files only."}async function cleanupOldFiles(){try{let e=await s.promises.readdir(c),i=Date.now();for(let a of e){let e=n().join(c,a),r=await s.promises.stat(e);i-r.mtime.getTime()>36e5&&await s.promises.unlink(e)}}catch(e){console.error("Error cleaning up old files:",e)}}async function handler(e,i){if("POST"!==e.method)return i.status(405).json({success:!1,error:"Method not allowed"});try{await ensureUploadDir(),cleanupOldFiles().catch(console.error);let a=new t.IncomingForm({uploadDir:c,keepExtensions:!0,maxFileSize:10485760}),[r,o]=await new Promise((i,r)=>{a.parse(e,(e,a,t)=>{e?r(e):i([a,t])})}),p=Array.isArray(o.file)?o.file[0]:o.file;if(!p)return i.status(400).json({success:!1,error:"No file uploaded"});let u=validateFile(p);if(u){try{await s.promises.unlink(p.filepath)}catch(e){console.warn("Failed to clean up uploaded file:",e)}return i.status(400).json({success:!1,error:u})}let d=(0,l.v4)(),m=n().extname(p.originalFilename||""),f=`${d}${m}`,w=n().join(c,f);await s.promises.rename(p.filepath,w);let g={fileId:d,originalName:p.originalFilename,size:p.size,mimetype:p.mimetype,uploadTime:new Date().toISOString(),filePath:w},y=n().join(c,`${d}.json`);await s.promises.writeFile(y,JSON.stringify(g,null,2)),i.status(200).json({success:!0,fileId:d,filename:p.originalFilename||"unknown",size:p.size})}catch(e){console.error("Upload error:",e),i.status(500).json({success:!1,error:"Internal server error during file upload"})}}r()}catch(e){r(e)}})}};var i=require("../../webpack-api-runtime.js");i.C(e);var __webpack_exec__=e=>i(i.s=e),a=i.X(0,[471],()=>__webpack_exec__(1241));module.exports=a})();